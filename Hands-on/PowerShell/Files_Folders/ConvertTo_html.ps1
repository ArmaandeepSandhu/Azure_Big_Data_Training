# ConvertTo-HTML 

#The ConvertTo-Html cmdlet converts .NET objects into HTML that can be displayed 
#in a Web browser. 
#You can use this cmdlet to display the output of a command in a Web page.

#You can use the parameters of ConvertTo-Html to select object properties, 
#to specify a table or list format, to specify the HTML page title, to add text
#before and after the object, and to return only the table or list fragment.


# create a web page in HTML to get the date 
ConvertTo-Html -InputObject (Get-Date)

# Create a web page to display powershell alias 
Get-Alias | ConvertTo-Html | Out-File aliases.htm
Invoke-Item aliases.htm

# Create a web page in html to display PowerShell events 

Get-EventLog -LogName "Windows PowerShell" | ConvertTo-Html | Out-File pslog.htm

# Create a web page to display processes 

Get-Process |
  ConvertTo-Html -Property Name, Path, Company -Title "Process Information" | 
  Out-File proc.htm
Invoke-Item proc.htm

# Create a web page to display service objects 

#This command creates an HTML page of the service objects that the Get-Service 
#cmdlet returns. The command uses the As parameter to specify a list format. 
#The cmdlet Out-File sends the resulting HTML to the Services.htm file

Get-Service | ConvertTo-Html -As LIST | Out-File services.htm

# Create a web page to display specified services

#This command creates and opens a Web page that displays the services on the 
#computer that begin with A. It uses the Title, Body, PreContent, 
#and PostContent parameters of ConvertTo-Html to customize the output.

$htmlParams = @{
    Title = "Windows Services: Server01"
    Body = Get-Date
    PreContent = "<P>Generated by Corporate IT</P>"
    PostContent = "For details, contact Corporate IT."
  }
  Get-Service A* |
    ConvertTo-Html @htmlParams |
      Out-File Services.htm
  Invoke-Item Services.htm
